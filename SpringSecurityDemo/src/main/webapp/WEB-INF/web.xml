<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>Spring MVC Application</display-name>

	<!-- Spring MVC -->
	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<!-- 1.incoming request intercepted here -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- The security configuration is done in XML file and can have any 
	name such as spring-security.xml. This file needs to be loaded explicitly 
	from web.xml. This is done by adding ContextLoadListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring-security.xml
		</param-value>
	</context-param>

	<!-- In order to enable spring security for your web application,
	 you have to add below filter declaration in your web.xml. 
	 DelegatingFilterProxy delegates the control to a filter implementation which
	  is defined as a bean named springSecurityFilterChain. This bean is an infrastructure 
	  internal bean to handle namespace configurations. Once this configuration is done, 
	  all the incoming requests enter the spring framework for security check-->
	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>